version: '3'

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py migrate &&
             python3 manage.py wait_for_db &&
             python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
    restart: always
  
  db:
    image: postgres:10-alpine
    env_file:
      - ./.env.dev
    volumes:
      - ./datadb/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
  celery-worker:
    restart: always
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - app

  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A app beat -l info
    volumes:
      - ./app:/app
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - app

  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus/:/etc/prometheus/
    ports:
      - 9090:9090
    depends_on:
      - db
      - app

  grafana:
    image: grafana/grafana
    ports:
      - 3060:3000
    depends_on:
      - db
      - app